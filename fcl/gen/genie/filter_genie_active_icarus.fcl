#
# File:    filter_genie_active_icarus.fcl
# Purpose: Filters out all events with no neutrino interaction in active volume.
# Authors: Christian Farnese (farnese@pd.infn.it), Gianluca Petrillo (petrillo@slac.stanford.edu)
# Date:    May 6, 2020
# Version: 2.0
#
#
# The events in the input file are filtered with the requirement that at least
# one neutrino interaction happens within the active volume of the detector.
# See `FilterNeutrinosActiveVolume` documentation for more details.
#
# The standard ICARUS geometry configuration is used.
#
#
# Input
# ------
# 
# The job requires an input file with `std::vector<simb::MCTruth>` data products
# (any name). They are supposed to host some neutrino interaction.
# 
# 
# Output
# -------
#
# A full copy of the input file is produced, but with events filtered out.
#
#
# Dependencies
# -------------
# 
# This configuration utilises:
# 
# * `Geometry` service
# 
#
# Changes
# --------
# 
# 20200506 (petrillo@slac.stanford.edu) [v2.0]
#   adapted to the new version of `FilterNeutrinosActiveVolume` module
#

#include "services_common_icarus.fcl"
#include "FilterNeutrinoActive.fcl"
#include "rootoutput_icarus.fcl"


process_name: GenGenieFilter

services: {
  
  @table::icarus_common_services # from `services_common_icarus.fcl`
  
  # remove the services we do not need (i.e. most)
  TFileService:              @erase
  RandomNumberGenerator:     @erase
  NuRandomService:           @erase
  LArPropertiesService:      @erase
  DetectorPropertiesService: @erase
  DetectorClocksService:     @erase
  
} # services


physics: {
  
  filters: {
    
    eventActive: @local::icarus_FilterNeutrinoActive # from `FilterNeutrinoActive.fcl`
    
  } # filters
  
  filter: [ eventActive ]

  stream: [ rootoutput ]

  trigger_paths: [ filter ]
  end_paths:     [ stream ]
  
} # physics


outputs: {
  rootoutput: {
    
    @table::icarus_rootoutput
    SelectEvents: [filter]
    
  } # rootoutput
} # outputs

