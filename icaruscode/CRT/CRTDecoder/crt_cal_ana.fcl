process_name: Dump

services: {
#output file
  TFileService: { fileName: "crt_cal_ana.root" }
}

#source is a root file
source:
{
  module_type: RootInput
  maxEvents:   20000000      # Number of events to create
}

outputs:
{
 out1: {
  module_type: FileDumperOutput
  wantProductFullClassName:     true
  wantProductFriendlyClassName: false
 }
}

physics:
{

 producers:{}

 filters:{}

 analyzers:{

   crtCalAna: {
     module_type: CrtCalAnalysis

#AA: perhaps we need to rethink this logic. In the data files we will typically have CRT data from all the walls
     #mac5: [1,3,6,7] #north inner
     #mac5: [4,5,8,9] #north outer
     #mac5: [10,11,13,14,15,16] #west outer
     mac5: [17,19,21,22,23,24] #west inner
   }

 }

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]
 ana: [crtCalAna ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana ]  
}
